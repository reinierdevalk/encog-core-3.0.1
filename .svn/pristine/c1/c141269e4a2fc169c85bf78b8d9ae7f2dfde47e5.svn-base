<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Wed Sep 14 14:18:15 UTC 2011 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
NEATTraining (Encog Core 3.0.1 API)
</TITLE>

<META NAME="date" CONTENT="2011-09-14">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="NEATTraining (Encog Core 3.0.1 API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/NEATTraining.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/encog/neural/neat/training/NEATNeuronGene.html" title="class in org.encog.neural.neat.training"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/encog/neural/neat/training/NEATTraining.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NEATTraining.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.encog.neural.neat.training</FONT>
<BR>
Class NEATTraining</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html" title="class in org.encog.ml.genetic">org.encog.ml.genetic.GeneticAlgorithm</A>
      <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>org.encog.neural.neat.training.NEATTraining</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A>, <A HREF="../../../../../org/encog/util/concurrency/MultiThreadable.html" title="interface in org.encog.util.concurrency">MultiThreadable</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>NEATTraining</B><DT>extends <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html" title="class in org.encog.ml.genetic">GeneticAlgorithm</A><DT>implements <A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></DL>
</PRE>

<P>
Implements NEAT genetic training.
 
 NeuroEvolution of Augmenting Topologies (NEAT) is a genetic algorithm for the
 generation of evolving artificial neural networks. It was developed by Ken
 Stanley while at The University of Texas at Austin.
 
 http://www.cs.ucf.edu/~kstanley/
<P>

<P>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#NEATTraining(org.encog.neural.networks.training.CalculateScore, int, int, int)">NEATTraining</A></B>(<A HREF="../../../../../org/encog/neural/networks/training/CalculateScore.html" title="interface in org.encog.neural.networks.training">CalculateScore</A>&nbsp;calculateScore,
             int&nbsp;inputCount,
             int&nbsp;outputCount,
             int&nbsp;populationSize)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a neat trainer with a new population.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#NEATTraining(org.encog.neural.networks.training.CalculateScore, org.encog.ml.genetic.population.Population)">NEATTraining</A></B>(<A HREF="../../../../../org/encog/neural/networks/training/CalculateScore.html" title="interface in org.encog.neural.networks.training">CalculateScore</A>&nbsp;calculateScore,
             <A HREF="../../../../../org/encog/ml/genetic/population/Population.html" title="interface in org.encog.ml.genetic.population">Population</A>&nbsp;population)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct neat training with an existing population.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#addNeuronID(long, java.util.List)">addNeuronID</A></B>(long&nbsp;nodeID,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Long.html?is-external=true" title="class or interface in java.lang">Long</A>&gt;&nbsp;vec)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add a neuron.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#addStrategy(org.encog.ml.train.strategy.Strategy)">addStrategy</A></B>(<A HREF="../../../../../org/encog/ml/train/strategy/Strategy.html" title="interface in org.encog.ml.train.strategy">Strategy</A>&nbsp;strategy)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not supported, will throw an error.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#adjustCompatibilityThreshold()">adjustCompatibilityThreshold</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjust the species compatibility threshold.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#adjustSpeciesScore()">adjustSpeciesScore</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjust each species score.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#canContinue()">canContinue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#crossover(org.encog.neural.neat.training.NEATGenome, org.encog.neural.neat.training.NEATGenome)">crossover</A></B>(<A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A>&nbsp;mom,
          <A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A>&nbsp;dad)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform the crossover.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#finishTraining()">finishTraining</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when training is done.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getError()">getError</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return The error for the best genome.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/ml/TrainingImplementationType.html" title="enum in org.encog.ml">TrainingImplementationType</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getImplementationType()">getImplementationType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/neural/neat/training/NEATInnovationList.html" title="class in org.encog.neural.neat.training">NEATInnovationList</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getInnovations()">getInnovations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getInputCount()">getInputCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getIteration()">getIteration</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/ml/MLMethod.html" title="interface in org.encog.ml">MLMethod</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getMethod()">getMethod</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the current best machine learning method from the training.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getOutputCount()">getOutputCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamActivationMutationRate()">getParamActivationMutationRate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamChanceAddLink()">getParamChanceAddLink</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamChanceAddNode()">getParamChanceAddNode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamChanceAddRecurrentLink()">getParamChanceAddRecurrentLink</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamCompatibilityThreshold()">getParamCompatibilityThreshold</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamCrossoverRate()">getParamCrossoverRate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamMaxActivationPerturbation()">getParamMaxActivationPerturbation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamMaxNumberOfSpecies()">getParamMaxNumberOfSpecies</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamMaxPermittedNeurons()">getParamMaxPermittedNeurons</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamMaxWeightPerturbation()">getParamMaxWeightPerturbation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamMutationRate()">getParamMutationRate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamNumAddLinkAttempts()">getParamNumAddLinkAttempts</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamNumGensAllowedNoImprovement()">getParamNumGensAllowedNoImprovement</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamNumTrysToFindLoopedLink()">getParamNumTrysToFindLoopedLink</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamNumTrysToFindOldLink()">getParamNumTrysToFindOldLink</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getParamProbabilityWeightReplaced()">getParamProbabilityWeightReplaced</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../../org/encog/ml/train/strategy/Strategy.html" title="interface in org.encog.ml.train.strategy">Strategy</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getStrategies()">getStrategies</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an empty list, strategies are not supported.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/ml/data/MLDataSet.html" title="interface in org.encog.ml.data">MLDataSet</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#getTraining()">getTraining</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns null, does not use a training set, rather uses a score function.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#isSnapshot()">isSnapshot</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#isTrainingDone()">isTrainingDone</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#iteration()">iteration</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform one training iteration.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#iteration(int)">iteration</A></B>(int&nbsp;count)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform the specified number of training iterations.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/neural/networks/training/propagation/TrainingContinuation.html" title="class in org.encog.neural.networks.training.propagation">TrainingContinuation</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#pause()">pause</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pause the training to continue later.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#resetAndKill()">resetAndKill</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reset for an iteration.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#resume(org.encog.neural.networks.training.propagation.TrainingContinuation)">resume</A></B>(<A HREF="../../../../../org/encog/neural/networks/training/propagation/TrainingContinuation.html" title="class in org.encog.neural.networks.training.propagation">TrainingContinuation</A>&nbsp;state)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resume training.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setError(double)">setError</A></B>(double&nbsp;error)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setIteration(int)">setIteration</A></B>(int&nbsp;iteration)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the current training iteration.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamActivationMutationRate(double)">setParamActivationMutationRate</A></B>(double&nbsp;paramActivationMutationRate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the activation mutation rate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamChanceAddLink(double)">setParamChanceAddLink</A></B>(double&nbsp;paramChanceAddLink)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the chance to add a link.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamChanceAddNode(double)">setParamChanceAddNode</A></B>(double&nbsp;paramChanceAddNode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the chance to add a node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamChanceAddRecurrentLink(double)">setParamChanceAddRecurrentLink</A></B>(double&nbsp;paramChanceAddRecurrentLink)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the chance to add a recurrent link.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamCompatibilityThreshold(double)">setParamCompatibilityThreshold</A></B>(double&nbsp;paramCompatibilityThreshold)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the compatibility threshold for species.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamCrossoverRate(double)">setParamCrossoverRate</A></B>(double&nbsp;paramCrossoverRate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the cross over rate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamMaxActivationPerturbation(double)">setParamMaxActivationPerturbation</A></B>(double&nbsp;paramMaxActivationPerturbation)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the max activation perturbation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamMaxNumberOfSpecies(int)">setParamMaxNumberOfSpecies</A></B>(int&nbsp;paramMaxNumberOfSpecies)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the maximum number of species.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamMaxPermittedNeurons(double)">setParamMaxPermittedNeurons</A></B>(double&nbsp;paramMaxPermittedNeurons)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the max permitted neurons.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamMaxWeightPerturbation(double)">setParamMaxWeightPerturbation</A></B>(double&nbsp;paramMaxWeightPerturbation)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the max weight perturbation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamMutationRate(double)">setParamMutationRate</A></B>(double&nbsp;paramMutationRate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the mutation rate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamNumAddLinkAttempts(int)">setParamNumAddLinkAttempts</A></B>(int&nbsp;paramNumAddLinkAttempts)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of attempts to add a link.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamNumGensAllowedNoImprovement(int)">setParamNumGensAllowedNoImprovement</A></B>(int&nbsp;paramNumGensAllowedNoImprovement)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of no-improvement generations allowed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamNumTrysToFindLoopedLink(int)">setParamNumTrysToFindLoopedLink</A></B>(int&nbsp;paramNumTrysToFindLoopedLink)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of tries to create a looped link.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamNumTrysToFindOldLink(int)">setParamNumTrysToFindOldLink</A></B>(int&nbsp;paramNumTrysToFindOldLink)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of tries to try an old link.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setParamProbabilityWeightReplaced(double)">setParamProbabilityWeightReplaced</A></B>(double&nbsp;paramProbabilityWeightReplaced)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the probability to replace a weight.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#setSnapshot(boolean)">setSnapshot</A></B>(boolean&nbsp;snapshot)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set if we are using snapshot mode.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#sortAndRecord()">sortAndRecord</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sort the genomes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#speciateAndCalculateSpawnLevels()">speciateAndCalculateSpawnLevels</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine the species.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/encog/neural/neat/training/NEATTraining.html#tournamentSelection(int)">tournamentSelection</A></B>(int&nbsp;numComparisons)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select a gene using a tournament.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.encog.ml.genetic.GeneticAlgorithm"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.encog.ml.genetic.<A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html" title="class in org.encog.ml.genetic">GeneticAlgorithm</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#addSpeciesMember(org.encog.ml.genetic.species.Species, org.encog.ml.genetic.genome.Genome)">addSpeciesMember</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#calculateScore(org.encog.ml.genetic.genome.Genome)">calculateScore</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getCalculateScore()">getCalculateScore</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getComparator()">getComparator</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getCrossover()">getCrossover</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getMatingPopulation()">getMatingPopulation</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getMutate()">getMutate</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getMutationPercent()">getMutationPercent</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getPercentToMate()">getPercentToMate</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getPopulation()">getPopulation</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#getThreadCount()">getThreadCount</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setCalculateScore(org.encog.ml.genetic.genome.CalculateGenomeScore)">setCalculateScore</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setComparator(org.encog.ml.genetic.genome.GenomeComparator)">setComparator</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setCrossover(org.encog.ml.genetic.crossover.Crossover)">setCrossover</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setMatingPopulation(double)">setMatingPopulation</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setMutate(org.encog.ml.genetic.mutate.Mutate)">setMutate</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setMutationPercent(double)">setMutationPercent</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setPercentToMate(double)">setPercentToMate</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setPopulation(org.encog.ml.genetic.population.Population)">setPopulation</A>, <A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#setThreadCount(int)">setThreadCount</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="NEATTraining(org.encog.neural.networks.training.CalculateScore, int, int, int)"><!-- --></A><H3>
NEATTraining</H3>
<PRE>
public <B>NEATTraining</B>(<A HREF="../../../../../org/encog/neural/networks/training/CalculateScore.html" title="interface in org.encog.neural.networks.training">CalculateScore</A>&nbsp;calculateScore,
                    int&nbsp;inputCount,
                    int&nbsp;outputCount,
                    int&nbsp;populationSize)</PRE>
<DL>
<DD>Construct a neat trainer with a new population. The new population is
 created from the specified parameters.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>calculateScore</CODE> - The score calculation object.<DD><CODE>inputCount</CODE> - The input neuron count.<DD><CODE>outputCount</CODE> - The output neuron count.<DD><CODE>populationSize</CODE> - The population size.</DL>
</DL>
<HR>

<A NAME="NEATTraining(org.encog.neural.networks.training.CalculateScore, org.encog.ml.genetic.population.Population)"><!-- --></A><H3>
NEATTraining</H3>
<PRE>
public <B>NEATTraining</B>(<A HREF="../../../../../org/encog/neural/networks/training/CalculateScore.html" title="interface in org.encog.neural.networks.training">CalculateScore</A>&nbsp;calculateScore,
                    <A HREF="../../../../../org/encog/ml/genetic/population/Population.html" title="interface in org.encog.ml.genetic.population">Population</A>&nbsp;population)</PRE>
<DL>
<DD>Construct neat training with an existing population.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>calculateScore</CODE> - The score object to use.<DD><CODE>population</CODE> - The population to use.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="addNeuronID(long, java.util.List)"><!-- --></A><H3>
addNeuronID</H3>
<PRE>
public void <B>addNeuronID</B>(long&nbsp;nodeID,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Long.html?is-external=true" title="class or interface in java.lang">Long</A>&gt;&nbsp;vec)</PRE>
<DL>
<DD>Add a neuron.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>nodeID</CODE> - The neuron id.<DD><CODE>vec</CODE> - THe list of id's used.</DL>
</DD>
</DL>
<HR>

<A NAME="addStrategy(org.encog.ml.train.strategy.Strategy)"><!-- --></A><H3>
addStrategy</H3>
<PRE>
public void <B>addStrategy</B>(<A HREF="../../../../../org/encog/ml/train/strategy/Strategy.html" title="interface in org.encog.ml.train.strategy">Strategy</A>&nbsp;strategy)</PRE>
<DL>
<DD>Not supported, will throw an error.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#addStrategy(org.encog.ml.train.strategy.Strategy)">addStrategy</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>strategy</CODE> - Not used.</DL>
</DD>
</DL>
<HR>

<A NAME="adjustCompatibilityThreshold()"><!-- --></A><H3>
adjustCompatibilityThreshold</H3>
<PRE>
public void <B>adjustCompatibilityThreshold</B>()</PRE>
<DL>
<DD>Adjust the species compatibility threshold. This prevents us from having
 too many species.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="adjustSpeciesScore()"><!-- --></A><H3>
adjustSpeciesScore</H3>
<PRE>
public void <B>adjustSpeciesScore</B>()</PRE>
<DL>
<DD>Adjust each species score.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="canContinue()"><!-- --></A><H3>
canContinue</H3>
<PRE>
public boolean <B>canContinue</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#canContinue()">canContinue</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>True if the training can be paused, and later continued.</DL>
</DD>
</DL>
<HR>

<A NAME="crossover(org.encog.neural.neat.training.NEATGenome, org.encog.neural.neat.training.NEATGenome)"><!-- --></A><H3>
crossover</H3>
<PRE>
public <A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A> <B>crossover</B>(<A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A>&nbsp;mom,
                            <A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A>&nbsp;dad)</PRE>
<DL>
<DD>Perform the crossover.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mom</CODE> - The mother.<DD><CODE>dad</CODE> - The father.
<DT><B>Returns:</B><DD>The child.</DL>
</DD>
</DL>
<HR>

<A NAME="finishTraining()"><!-- --></A><H3>
finishTraining</H3>
<PRE>
public void <B>finishTraining</B>()</PRE>
<DL>
<DD>Called when training is done.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#finishTraining()">finishTraining</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getError()"><!-- --></A><H3>
getError</H3>
<PRE>
public double <B>getError</B>()</PRE>
<DL>
<DD>return The error for the best genome.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getError()">getError</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Returns the training error. This value is calculated as the
         training data is evaluated by the iteration function. This has
         two important ramifications. First, the value returned by
         getError() is meaningless prior to a call to iteration. Secondly,
         the error is calculated BEFORE training is applied by the call to
         iteration. The timing of the error calculation is done for
         performance reasons.</DL>
</DD>
</DL>
<HR>

<A NAME="getImplementationType()"><!-- --></A><H3>
getImplementationType</H3>
<PRE>
public <A HREF="../../../../../org/encog/ml/TrainingImplementationType.html" title="enum in org.encog.ml">TrainingImplementationType</A> <B>getImplementationType</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getImplementationType()">getImplementationType</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The training implementation type.</DL>
</DD>
</DL>
<HR>

<A NAME="getInnovations()"><!-- --></A><H3>
getInnovations</H3>
<PRE>
public <A HREF="../../../../../org/encog/neural/neat/training/NEATInnovationList.html" title="class in org.encog.neural.neat.training">NEATInnovationList</A> <B>getInnovations</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The innovations.</DL>
</DD>
</DL>
<HR>

<A NAME="getInputCount()"><!-- --></A><H3>
getInputCount</H3>
<PRE>
public int <B>getInputCount</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The input count.</DL>
</DD>
</DL>
<HR>

<A NAME="getIteration()"><!-- --></A><H3>
getIteration</H3>
<PRE>
public int <B>getIteration</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getIteration()">getIteration</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The current training iteration.</DL>
</DD>
</DL>
<HR>

<A NAME="getMethod()"><!-- --></A><H3>
getMethod</H3>
<PRE>
public <A HREF="../../../../../org/encog/ml/MLMethod.html" title="interface in org.encog.ml">MLMethod</A> <B>getMethod</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getMethod()">MLTrain</A></CODE></B></DD>
<DD>Get the current best machine learning method from the training.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getMethod()">getMethod</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A network created for the best genome.</DL>
</DD>
</DL>
<HR>

<A NAME="getOutputCount()"><!-- --></A><H3>
getOutputCount</H3>
<PRE>
public int <B>getOutputCount</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The number of output neurons.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamActivationMutationRate()"><!-- --></A><H3>
getParamActivationMutationRate</H3>
<PRE>
public double <B>getParamActivationMutationRate</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The mutation rate.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamChanceAddLink()"><!-- --></A><H3>
getParamChanceAddLink</H3>
<PRE>
public double <B>getParamChanceAddLink</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The chance that we will add a link.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamChanceAddNode()"><!-- --></A><H3>
getParamChanceAddNode</H3>
<PRE>
public double <B>getParamChanceAddNode</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The chance that we will add a node.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamChanceAddRecurrentLink()"><!-- --></A><H3>
getParamChanceAddRecurrentLink</H3>
<PRE>
public double <B>getParamChanceAddRecurrentLink</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The chance we will add a recurrent link.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamCompatibilityThreshold()"><!-- --></A><H3>
getParamCompatibilityThreshold</H3>
<PRE>
public double <B>getParamCompatibilityThreshold</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The compatibility threshold for a species.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamCrossoverRate()"><!-- --></A><H3>
getParamCrossoverRate</H3>
<PRE>
public double <B>getParamCrossoverRate</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The crossover rate.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamMaxActivationPerturbation()"><!-- --></A><H3>
getParamMaxActivationPerturbation</H3>
<PRE>
public double <B>getParamMaxActivationPerturbation</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>THe maximum activation perturbation.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamMaxNumberOfSpecies()"><!-- --></A><H3>
getParamMaxNumberOfSpecies</H3>
<PRE>
public int <B>getParamMaxNumberOfSpecies</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The maximum number of species.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamMaxPermittedNeurons()"><!-- --></A><H3>
getParamMaxPermittedNeurons</H3>
<PRE>
public double <B>getParamMaxPermittedNeurons</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>THe maximum neurons.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamMaxWeightPerturbation()"><!-- --></A><H3>
getParamMaxWeightPerturbation</H3>
<PRE>
public double <B>getParamMaxWeightPerturbation</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>THe max weight perturbation.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamMutationRate()"><!-- --></A><H3>
getParamMutationRate</H3>
<PRE>
public double <B>getParamMutationRate</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The mutation rate.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamNumAddLinkAttempts()"><!-- --></A><H3>
getParamNumAddLinkAttempts</H3>
<PRE>
public int <B>getParamNumAddLinkAttempts</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The number of attempts to add a link.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamNumGensAllowedNoImprovement()"><!-- --></A><H3>
getParamNumGensAllowedNoImprovement</H3>
<PRE>
public int <B>getParamNumGensAllowedNoImprovement</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The number of generations allowed with no improvement.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamNumTrysToFindLoopedLink()"><!-- --></A><H3>
getParamNumTrysToFindLoopedLink</H3>
<PRE>
public int <B>getParamNumTrysToFindLoopedLink</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The number of tries to find a looped link.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamNumTrysToFindOldLink()"><!-- --></A><H3>
getParamNumTrysToFindOldLink</H3>
<PRE>
public int <B>getParamNumTrysToFindOldLink</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The number of tries to find an old link.</DL>
</DD>
</DL>
<HR>

<A NAME="getParamProbabilityWeightReplaced()"><!-- --></A><H3>
getParamProbabilityWeightReplaced</H3>
<PRE>
public double <B>getParamProbabilityWeightReplaced</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>THe propbability that a weight will be replaced.</DL>
</DD>
</DL>
<HR>

<A NAME="getStrategies()"><!-- --></A><H3>
getStrategies</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../../org/encog/ml/train/strategy/Strategy.html" title="interface in org.encog.ml.train.strategy">Strategy</A>&gt; <B>getStrategies</B>()</PRE>
<DL>
<DD>Returns an empty list, strategies are not supported.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getStrategies()">getStrategies</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The strategies in use(none).</DL>
</DD>
</DL>
<HR>

<A NAME="getTraining()"><!-- --></A><H3>
getTraining</H3>
<PRE>
public <A HREF="../../../../../org/encog/ml/data/MLDataSet.html" title="interface in org.encog.ml.data">MLDataSet</A> <B>getTraining</B>()</PRE>
<DL>
<DD>Returns null, does not use a training set, rather uses a score function.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#getTraining()">getTraining</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, not used.</DL>
</DD>
</DL>
<HR>

<A NAME="isSnapshot()"><!-- --></A><H3>
isSnapshot</H3>
<PRE>
public boolean <B>isSnapshot</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Are we using snapshot mode.</DL>
</DD>
</DL>
<HR>

<A NAME="isTrainingDone()"><!-- --></A><H3>
isTrainingDone</H3>
<PRE>
public boolean <B>isTrainingDone</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#isTrainingDone()">isTrainingDone</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>True if training can progress no further.</DL>
</DD>
</DL>
<HR>

<A NAME="iteration()"><!-- --></A><H3>
iteration</H3>
<PRE>
public void <B>iteration</B>()</PRE>
<DL>
<DD>Perform one training iteration.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#iteration()">iteration</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE><DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html#iteration()">iteration</A></CODE> in class <CODE><A HREF="../../../../../org/encog/ml/genetic/GeneticAlgorithm.html" title="class in org.encog.ml.genetic">GeneticAlgorithm</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="iteration(int)"><!-- --></A><H3>
iteration</H3>
<PRE>
public void <B>iteration</B>(int&nbsp;count)</PRE>
<DL>
<DD>Perform the specified number of training iterations. This is a basic
 implementation that just calls iteration the specified number of times.
 However, some training methods, particularly with the GPU, benefit
 greatly by calling with higher numbers than 1.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#iteration(int)">iteration</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>count</CODE> - The number of training iterations.</DL>
</DD>
</DL>
<HR>

<A NAME="pause()"><!-- --></A><H3>
pause</H3>
<PRE>
public <A HREF="../../../../../org/encog/neural/networks/training/propagation/TrainingContinuation.html" title="class in org.encog.neural.networks.training.propagation">TrainingContinuation</A> <B>pause</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#pause()">MLTrain</A></CODE></B></DD>
<DD>Pause the training to continue later.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#pause()">pause</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A training continuation object.</DL>
</DD>
</DL>
<HR>

<A NAME="resetAndKill()"><!-- --></A><H3>
resetAndKill</H3>
<PRE>
public void <B>resetAndKill</B>()</PRE>
<DL>
<DD>Reset for an iteration.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="resume(org.encog.neural.networks.training.propagation.TrainingContinuation)"><!-- --></A><H3>
resume</H3>
<PRE>
public void <B>resume</B>(<A HREF="../../../../../org/encog/neural/networks/training/propagation/TrainingContinuation.html" title="class in org.encog.neural.networks.training.propagation">TrainingContinuation</A>&nbsp;state)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#resume(org.encog.neural.networks.training.propagation.TrainingContinuation)">MLTrain</A></CODE></B></DD>
<DD>Resume training.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#resume(org.encog.neural.networks.training.propagation.TrainingContinuation)">resume</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>state</CODE> - The training continuation object to use to continue.</DL>
</DD>
</DL>
<HR>

<A NAME="setError(double)"><!-- --></A><H3>
setError</H3>
<PRE>
public void <B>setError</B>(double&nbsp;error)</PRE>
<DL>
<DD>Not used.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#setError(double)">setError</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>error</CODE> - Not used.</DL>
</DD>
</DL>
<HR>

<A NAME="setIteration(int)"><!-- --></A><H3>
setIteration</H3>
<PRE>
public void <B>setIteration</B>(int&nbsp;iteration)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#setIteration(int)">MLTrain</A></CODE></B></DD>
<DD>Set the current training iteration.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html#setIteration(int)">setIteration</A></CODE> in interface <CODE><A HREF="../../../../../org/encog/ml/train/MLTrain.html" title="interface in org.encog.ml.train">MLTrain</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>iteration</CODE> - Iteration.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamActivationMutationRate(double)"><!-- --></A><H3>
setParamActivationMutationRate</H3>
<PRE>
public void <B>setParamActivationMutationRate</B>(double&nbsp;paramActivationMutationRate)</PRE>
<DL>
<DD>Set the activation mutation rate.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramActivationMutationRate</CODE> - The mutation rate.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamChanceAddLink(double)"><!-- --></A><H3>
setParamChanceAddLink</H3>
<PRE>
public void <B>setParamChanceAddLink</B>(double&nbsp;paramChanceAddLink)</PRE>
<DL>
<DD>Set the chance to add a link.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramChanceAddLink</CODE> - The chance to add a link.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamChanceAddNode(double)"><!-- --></A><H3>
setParamChanceAddNode</H3>
<PRE>
public void <B>setParamChanceAddNode</B>(double&nbsp;paramChanceAddNode)</PRE>
<DL>
<DD>Set the chance to add a node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramChanceAddNode</CODE> - The chance to add a node.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamChanceAddRecurrentLink(double)"><!-- --></A><H3>
setParamChanceAddRecurrentLink</H3>
<PRE>
public void <B>setParamChanceAddRecurrentLink</B>(double&nbsp;paramChanceAddRecurrentLink)</PRE>
<DL>
<DD>Set the chance to add a recurrent link.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramChanceAddRecurrentLink</CODE> - The chance to add a recurrent link.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamCompatibilityThreshold(double)"><!-- --></A><H3>
setParamCompatibilityThreshold</H3>
<PRE>
public void <B>setParamCompatibilityThreshold</B>(double&nbsp;paramCompatibilityThreshold)</PRE>
<DL>
<DD>Set the compatibility threshold for species.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramCompatibilityThreshold</CODE> - The threshold.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamCrossoverRate(double)"><!-- --></A><H3>
setParamCrossoverRate</H3>
<PRE>
public void <B>setParamCrossoverRate</B>(double&nbsp;paramCrossoverRate)</PRE>
<DL>
<DD>Set the cross over rate.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramCrossoverRate</CODE> - The crossover rate.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamMaxActivationPerturbation(double)"><!-- --></A><H3>
setParamMaxActivationPerturbation</H3>
<PRE>
public void <B>setParamMaxActivationPerturbation</B>(double&nbsp;paramMaxActivationPerturbation)</PRE>
<DL>
<DD>Set the max activation perturbation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMaxActivationPerturbation</CODE> - The max perturbation.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamMaxNumberOfSpecies(int)"><!-- --></A><H3>
setParamMaxNumberOfSpecies</H3>
<PRE>
public void <B>setParamMaxNumberOfSpecies</B>(int&nbsp;paramMaxNumberOfSpecies)</PRE>
<DL>
<DD>Set the maximum number of species.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMaxNumberOfSpecies</CODE> - The max number of species.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamMaxPermittedNeurons(double)"><!-- --></A><H3>
setParamMaxPermittedNeurons</H3>
<PRE>
public void <B>setParamMaxPermittedNeurons</B>(double&nbsp;paramMaxPermittedNeurons)</PRE>
<DL>
<DD>Set the max permitted neurons.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMaxPermittedNeurons</CODE> - The max permitted neurons.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamMaxWeightPerturbation(double)"><!-- --></A><H3>
setParamMaxWeightPerturbation</H3>
<PRE>
public void <B>setParamMaxWeightPerturbation</B>(double&nbsp;paramMaxWeightPerturbation)</PRE>
<DL>
<DD>Set the max weight perturbation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMaxWeightPerturbation</CODE> - The max weight perturbation.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamMutationRate(double)"><!-- --></A><H3>
setParamMutationRate</H3>
<PRE>
public void <B>setParamMutationRate</B>(double&nbsp;paramMutationRate)</PRE>
<DL>
<DD>Set the mutation rate.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMutationRate</CODE> - The mutation rate.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamNumAddLinkAttempts(int)"><!-- --></A><H3>
setParamNumAddLinkAttempts</H3>
<PRE>
public void <B>setParamNumAddLinkAttempts</B>(int&nbsp;paramNumAddLinkAttempts)</PRE>
<DL>
<DD>Set the number of attempts to add a link.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramNumAddLinkAttempts</CODE> - The number of attempts to add a link.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamNumGensAllowedNoImprovement(int)"><!-- --></A><H3>
setParamNumGensAllowedNoImprovement</H3>
<PRE>
public void <B>setParamNumGensAllowedNoImprovement</B>(int&nbsp;paramNumGensAllowedNoImprovement)</PRE>
<DL>
<DD>Set the number of no-improvement generations allowed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramNumGensAllowedNoImprovement</CODE> - The number of generations.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamNumTrysToFindLoopedLink(int)"><!-- --></A><H3>
setParamNumTrysToFindLoopedLink</H3>
<PRE>
public void <B>setParamNumTrysToFindLoopedLink</B>(int&nbsp;paramNumTrysToFindLoopedLink)</PRE>
<DL>
<DD>Set the number of tries to create a looped link.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramNumTrysToFindLoopedLink</CODE> - Number of tries.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamNumTrysToFindOldLink(int)"><!-- --></A><H3>
setParamNumTrysToFindOldLink</H3>
<PRE>
public void <B>setParamNumTrysToFindOldLink</B>(int&nbsp;paramNumTrysToFindOldLink)</PRE>
<DL>
<DD>Set the number of tries to try an old link.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramNumTrysToFindOldLink</CODE> - Number of tries.</DL>
</DD>
</DL>
<HR>

<A NAME="setParamProbabilityWeightReplaced(double)"><!-- --></A><H3>
setParamProbabilityWeightReplaced</H3>
<PRE>
public void <B>setParamProbabilityWeightReplaced</B>(double&nbsp;paramProbabilityWeightReplaced)</PRE>
<DL>
<DD>Set the probability to replace a weight.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramProbabilityWeightReplaced</CODE> - The probability.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnapshot(boolean)"><!-- --></A><H3>
setSnapshot</H3>
<PRE>
public void <B>setSnapshot</B>(boolean&nbsp;snapshot)</PRE>
<DL>
<DD>Set if we are using snapshot mode.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>snapshot</CODE> - True if we are using snapshot mode.</DL>
</DD>
</DL>
<HR>

<A NAME="sortAndRecord()"><!-- --></A><H3>
sortAndRecord</H3>
<PRE>
public void <B>sortAndRecord</B>()</PRE>
<DL>
<DD>Sort the genomes.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="speciateAndCalculateSpawnLevels()"><!-- --></A><H3>
speciateAndCalculateSpawnLevels</H3>
<PRE>
public void <B>speciateAndCalculateSpawnLevels</B>()</PRE>
<DL>
<DD>Determine the species.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="tournamentSelection(int)"><!-- --></A><H3>
tournamentSelection</H3>
<PRE>
public <A HREF="../../../../../org/encog/neural/neat/training/NEATGenome.html" title="class in org.encog.neural.neat.training">NEATGenome</A> <B>tournamentSelection</B>(int&nbsp;numComparisons)</PRE>
<DL>
<DD>Select a gene using a tournament.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>numComparisons</CODE> - The number of compares to do.
<DT><B>Returns:</B><DD>The chosen genome.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/NEATTraining.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/encog/neural/neat/training/NEATNeuronGene.html" title="class in org.encog.neural.neat.training"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/encog/neural/neat/training/NEATTraining.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NEATTraining.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
Copyright &#169; 2011. All Rights Reserved.
</BODY>
</HTML>
